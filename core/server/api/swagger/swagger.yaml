swagger: '2.0'
info:
  title: Vardyger API
  description: The RESTful API for the Vardyger publishing platform.
  version: '1.0.0'
host: localhost:10010
# host: api.vardyger.org
basePath: /v1
schemes:
  - http
  # - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /posts:
    x-swagger-router-controller: posts
    post:
      description: >
        Adds a post to the posts collection.
        </br>Location (in the response header) is used to specify the URI of the newly created resource.
      operationId: addPost
      parameters:
        - name: post
          in: body
          description: The posts contents
          required: true
          schema:
            $ref: '#/definitions/Post'
      tags:
        - Posts
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SuccessResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    x-swagger-router-controller: posts
    get:
      description: >
        Returns all the posts in the collection.
      operationId: findPosts
      tags:
        - Posts
      responses:
        '200':
          description: An array of posts
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /posts/{id}:
    x-swagger-router-controller: posts
    put:
      description: Updates a post in the posts collection.
      operationId: deletePost
      parameters:
        - name: id
          in: path
          description: The posts ID
          required: true
          type: string
        - name: post
          in: body
          description: The posts contents
          required: true
          schema:
            $ref: '#/definitions/Post'
      tags:
        - Posts
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SuccessResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes a post in the posts collection.
      operationId: deletePost
      parameters:
        - name: id
          in: path
          description: The posts ID
          required: true
          type: string
      tags:
        - Posts
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SuccessResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  Post:
    required:
      - title
      - markdown
      - html
    properties:
      id:
        type: string
        description: The posts unique identifier.
      title:
        type: string
        description: The posts title -> My First Blog Post.
      slug:
        type: string
        description: The posts slug -> my-first-blog-post.
      markdown:
        type: string
        description: The posts Markdown content.
      html:
        type: string
        description: The posts HTML content.
      image:
        type: string
        description: Associate a featured image with the post.
      featured:
        type: boolean
        description: Highlight this blog post.
      page:
        type: boolean
        description: Posts are listed in order from newest to oldest, pages are static and not listed by date.
      state:
        type: string
        description: The posts status -> draft.
      locale:
        type: string
        description: The posts (language and) locale -> en_GB.
      metaTitle:
        type: string
        description: Search Engine Optimsed (SEO) post title.
      metaDescription:
        type: string
        description: Search Engine Optimsed (SEO) post description.
  SuccessResponse:
    required:
      - id
    properties:
      id:
        type: string
  ErrorResponse:
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string